/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImageListTestFrame.java
 *
 * Created on 24.03.2010, 00:34:59
 */
package de.realriu.riulib.gui.imagelist;


import de.realriu.riulib.gui.imagelist.ImageListAdapter;
import de.realriu.riulib.gui.imagelist.ReferenzImageList;
import de.realriu.riulib.gui.imagelist.AbstractImageList;
import de.realriu.riulib.gui.imagelist.ImageListListener;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.util.Comparator;


import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author riu
 */
public class ImageListTest extends javax.swing.JFrame implements ImageListListener<Image> {

    private ReferenzImageList<Integer> img_list;
    //private

    public ImageListTest() {
        initComponents();
        init();
        
    }

    public void init() {
        //img_list = new ScaledImageList(FileImageList.Alignment.Vertical, true, 200, 200);
        img_list = new ReferenzImageList<Integer>(AbstractImageList.Alignment.Horizontal, true);
        img_list.addImageListListener(this);

        img_list.addReferenceImageListListener(new ImageListAdapter<Integer>() {

            @Override
            public void imageHovered(int pos) {
                if (pos != -1) {
                    ImageListTest.this.img_list.setToolTipText(ImageListTest.this.img_list.getReferenz(pos).toString());
                }
            }

            @Override
            public void marginChanged(int[] oldSpaces, int[] newSpaces) {
                sp_left.setValue(newSpaces[0]);
                sp_right.setValue(newSpaces[1]);
                sp_top.setValue(newSpaces[2]);
                sp_bottom.setValue(newSpaces[3]);
            }

            
        });

       




        pl_images.add(img_list);


        img_list.setTextColor(Color.WHITE);
        img_list.setSelectionColor(Color.RED);
        img_list.setHoverColor(Color.CYAN);
        img_list.setBackground(Color.BLACK);





        File[] img = new File("/Users/riu/Pictures/Heimweg BildaZ").listFiles();



        Integer rnd;
        for (int i = 0; i < img.length; i++) {
            rnd = (int) (Math.random() * 100);
            try {
                img_list.addImage(ImageIO.read(img[i]), "" + rnd, rnd);
            } catch (Exception e) {
            }
        }

        img_list.setTextColor(null);
        jSpinner1.setValue(img_list.spaceBetweenPics);

        new ImageListTestFrame(img_list).setVisible(true);

        sp_left.setValue(img_list.getMargin()[0]);
        sp_right.setValue(img_list.getMargin()[1]);
        sp_top.setValue(img_list.getMargin()[2]);
        sp_bottom.setValue(img_list.getMargin()[3]);

        sp_left1.setValue(img_list.getPadding()[0]);
        sp_right1.setValue(img_list.getPadding()[1]);
        sp_top1.setValue(img_list.getPadding()[2]);
        sp_bottom1.setValue(img_list.getPadding()[3]);

        jCheckBox1.setSelected(img_list.isForcedSquareImages());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pl_images = new javax.swing.JPanel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        btn_sort = new javax.swing.JButton();
        btn_remove = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        sp_left = new javax.swing.JSpinner();
        sp_right = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        sp_bottom = new javax.swing.JSpinner();
        sp_top = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        sp_left1 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        sp_right1 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        sp_top1 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        sp_bottom1 = new javax.swing.JSpinner();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 22));

        pl_images.setBackground(new java.awt.Color(204, 204, 204));

        jSpinner1.setValue(20);
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jButton1.setText("Title");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_sort.setText("sort");
        btn_sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sortActionPerformed(evt);
            }
        });

        btn_remove.setText("-");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });

        btn_add.setText("+");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_refresh.setText("Replace");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        jButton2.setText("Reload");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        sp_left.setValue(20);
        sp_left.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_leftStateChanged(evt);
            }
        });

        sp_right.setValue(20);
        sp_right.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_rightStateChanged(evt);
            }
        });

        jLabel1.setText("margin");

        sp_bottom.setValue(20);
        sp_bottom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_bottomStateChanged(evt);
            }
        });

        sp_top.setValue(20);
        sp_top.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_topStateChanged(evt);
            }
        });

        jLabel2.setText("left");

        jLabel3.setText("right");

        jLabel4.setText("top");

        jLabel5.setText("bottom");

        jCheckBox1.setText("square");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("swap");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jSpinner2.setValue(0);

        jLabel6.setText("padding");

        jLabel7.setText("left");

        sp_left1.setValue(20);
        sp_left1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_left1StateChanged(evt);
            }
        });

        jLabel8.setText("right");

        sp_right1.setValue(20);
        sp_right1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_right1StateChanged(evt);
            }
        });

        jLabel9.setText("top");

        sp_top1.setValue(20);
        sp_top1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_top1StateChanged(evt);
            }
        });

        jLabel10.setText("bottom");

        sp_bottom1.setValue(20);
        sp_bottom1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_bottom1StateChanged(evt);
            }
        });

        jButton4.setText("Title Font");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pl_imagesLayout = new org.jdesktop.layout.GroupLayout(pl_images);
        pl_images.setLayout(pl_imagesLayout);
        pl_imagesLayout.setHorizontalGroup(
            pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pl_imagesLayout.createSequentialGroup()
                .addContainerGap()
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pl_imagesLayout.createSequentialGroup()
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jButton2)
                            .add(pl_imagesLayout.createSequentialGroup()
                                .add(btn_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(btn_remove, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(pl_imagesLayout.createSequentialGroup()
                                .add(btn_refresh)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 366, Short.MAX_VALUE)
                                .add(jLabel2))
                            .add(jLabel3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pl_imagesLayout.createSequentialGroup()
                                .add(jLabel1)
                                .add(40, 40, 40))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pl_imagesLayout.createSequentialGroup()
                                .add(sp_left, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pl_imagesLayout.createSequentialGroup()
                                .add(sp_right, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .add(pl_imagesLayout.createSequentialGroup()
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pl_imagesLayout.createSequentialGroup()
                                .add(btn_sort)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pl_imagesLayout.createSequentialGroup()
                                .add(jButton3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton4)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 91, Short.MAX_VALUE)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pl_imagesLayout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel7)
                                    .add(jLabel8))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pl_imagesLayout.createSequentialGroup()
                                        .add(jLabel6)
                                        .add(20, 20, 20))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, sp_left1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, sp_right1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(29, 29, 29)
                                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)))
                            .add(pl_imagesLayout.createSequentialGroup()
                                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel10)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel9))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(sp_top1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(sp_bottom1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jCheckBox1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(sp_top, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(sp_bottom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .add(pl_imagesLayout.createSequentialGroup()
                        .add(jSpinner2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                        .add(443, 443, 443))))
        );
        pl_imagesLayout.setVerticalGroup(
            pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pl_imagesLayout.createSequentialGroup()
                .addContainerGap()
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pl_imagesLayout.createSequentialGroup()
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(btn_add)
                            .add(btn_remove)
                            .add(btn_refresh))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2))
                    .add(pl_imagesLayout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(sp_left, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(sp_right, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sp_top, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pl_imagesLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(btn_sort)
                                .add(jButton1))
                            .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton3)
                            .add(jButton4)))
                    .add(pl_imagesLayout.createSequentialGroup()
                        .add(jLabel5)
                        .add(30, 30, 30)
                        .add(jCheckBox1))
                    .add(sp_bottom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(90, 90, 90)
                .add(jSpinner2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(pl_imagesLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sp_left1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel8)
                    .add(sp_right1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sp_top1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pl_imagesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel10)
                    .add(sp_bottom1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pl_images, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pl_images, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "JPG & GIF Images", "jpg", "gif");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            for (int i = 0; i < chooser.getSelectedFiles().length; i++) {
                try {
                    img_list.addImage(ImageIO.read(chooser.getSelectedFiles()[i]), "Test titel" + (i % 2 == 0 ? "test" : "a"));
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        if (img_list.getSelectedImageIndex() >= 0) {
            img_list.removeImage(img_list.getSelectedImageIndex());
        }
    }//GEN-LAST:event_btn_removeActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        
        if(img_list.getSelectedImageIndex()!=-1){
        JFileChooser chooser = new JFileChooser("/Users/riu/Bilder");
        chooser.setMultiSelectionEnabled(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG & GIF Images", "jpg", "gif");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
        try{img_list.replaceImage(img_list.getSelectedImageIndex(), ImageIO.read(chooser.getSelectedFile()));}catch(Exception e){}
        }
        }

        /*int pos1 = (int)(Math.random()*img_list.count());
        int pos2 = (int)(Math.random()*img_list.count());
        
        img_list.swap(pos1, pos2, true, 50);*/
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sortActionPerformed
        img_list.sort(new Comparator<Integer>() {

            public int compare(Integer o1, Integer o2) {
                return o1 - o2;
            }
        }, true, Integer.parseInt(jSpinner2.getValue()+""), true, ReferenzImageList.SortAlgorithm.Quicksort);
    }//GEN-LAST:event_btn_sortActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        img_list.spaceBetweenPics = (Integer) jSpinner1.getValue();
        img_list.repaint();
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AbstractImageList.VertikalTitlePosition titleYPosition = img_list.getVertikalTitlePosition();

        switch(titleYPosition){
        case AtBottom: img_list.titleYPosition = AbstractImageList.VertikalTitlePosition.Center; break;
        case Center: img_list.titleYPosition = AbstractImageList.VertikalTitlePosition.UnderBottom;break;
        case UnderBottom: img_list.titleYPosition = AbstractImageList.VertikalTitlePosition.UnderTop; break;
        case UnderTop: img_list.titleYPosition = AbstractImageList.VertikalTitlePosition.Custom.setPosition(23); break;
        default: img_list.titleYPosition = AbstractImageList.VertikalTitlePosition.AtBottom;break;
        }
        img_list.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        new Thread() {

            public void run() {
                while (img_list.count() > 0) {
                    img_list.removeImage(0);
                }

                File[] img = new File("/Users/riu/Pictures/Heimweg BildaZ").listFiles();

                Integer rnd;
                for (int i = 0; i < img.length; i++) {
                    rnd = (int) (Math.random() * 100);
                    try {
                        img_list.addImage(ImageIO.read(img[i]), "" + rnd, rnd);
                    } catch (Exception e) {
                    }
                }
            }
        }.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sp_leftStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_leftStateChanged
        Integer i = Integer.parseInt(sp_left.getValue()+"");
        img_list.setMargin(i, img_list.getMargin()[1], img_list.getMargin()[2], img_list.getMargin()[3]);
    }//GEN-LAST:event_sp_leftStateChanged

    private void sp_rightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_rightStateChanged
        Integer i = Integer.parseInt(sp_right.getValue()+"");
        img_list.setMargin(img_list.getMargin()[0], i, img_list.getMargin()[2], img_list.getMargin()[3]);
    }//GEN-LAST:event_sp_rightStateChanged

    private void sp_bottomStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_bottomStateChanged
        Integer i = Integer.parseInt(sp_bottom.getValue()+"");
        img_list.setMargin(img_list.getMargin()[0], img_list.getMargin()[1], img_list.getMargin()[2], i);
    }//GEN-LAST:event_sp_bottomStateChanged

    private void sp_topStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_topStateChanged
        Integer i = Integer.parseInt(sp_top.getValue()+"");
        img_list.setMargin(img_list.getMargin()[0], img_list.getMargin()[1], i, img_list.getMargin()[3]);
    }//GEN-LAST:event_sp_topStateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        img_list.setForceSquaredImages(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int pos1 = (int)(Math.random()*img_list.count());
        int pos2 = (int)(Math.random()*img_list.count());

        img_list.swap(pos1, pos2, true, Integer.parseInt(jSpinner2.getValue()+""));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void sp_left1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_left1StateChanged
        Integer i = Integer.parseInt(sp_left1.getValue()+"");
        img_list.setPadding(i, img_list.getPadding()[1], img_list.getPadding()[2], img_list.getPadding()[3]);
    }//GEN-LAST:event_sp_left1StateChanged

    private void sp_right1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_right1StateChanged
        Integer i = Integer.parseInt(sp_right1.getValue()+"");
        img_list.setPadding(img_list.getPadding()[0], i, img_list.getPadding()[2], img_list.getPadding()[3]);
    }//GEN-LAST:event_sp_right1StateChanged

    private void sp_top1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_top1StateChanged
        Integer i = Integer.parseInt(sp_top1.getValue()+"");
        img_list.setPadding(img_list.getPadding()[0], img_list.getPadding()[1], i, img_list.getPadding()[3]);
    }//GEN-LAST:event_sp_top1StateChanged

    private void sp_bottom1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_bottom1StateChanged
        Integer i = Integer.parseInt(sp_bottom1.getValue()+"");
        img_list.setPadding(img_list.getPadding()[0], img_list.getPadding()[1], img_list.getPadding()[2], i);
    }//GEN-LAST:event_sp_bottom1StateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        FontChooser fc = new FontChooser(this);
        fc.setVisible(true);
        Font myNewFont = fc.getSelectedFont();
        img_list.setTitleFont(myNewFont);
        fc.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ImageListTest().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_remove;
    private javax.swing.JButton btn_sort;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JPanel pl_images;
    private javax.swing.JSpinner sp_bottom;
    private javax.swing.JSpinner sp_bottom1;
    private javax.swing.JSpinner sp_left;
    private javax.swing.JSpinner sp_left1;
    private javax.swing.JSpinner sp_right;
    private javax.swing.JSpinner sp_right1;
    private javax.swing.JSpinner sp_top;
    private javax.swing.JSpinner sp_top1;
    // End of variables declaration//GEN-END:variables

    public void imageSelected(int i) {
        if (i >= 0) {
            img_list.centerImage(i, 89);
        }

    }

    public void imageAdded(Image i) {
    }

    public void imageRemoved(Image i) {
    }

    public void imageHovered(int i) {
        //if(i!=-1)
        //img_list.setToolTipText(img_list.getImageTitle(i));
    }

    public void imageReplaced(Image Old, Image New, int pos) {
    }

    @Override
    public void titleChanged(String Old, String New, int pos) {
        
    }
}
